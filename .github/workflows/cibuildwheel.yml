name: cibuildwheel build

on:
  workflow_dispatch:
  push:
    branches:
      - master
  release:
    types:
      - published

jobs:
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel

    - name: Build sdist
      run: |
        python setup.py sdist

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        path: dist/*.*

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022, macOS-11]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Use cmake
        run: cmake --version

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.15.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.15
          CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
          CIBW_SKIP: pp* *i686
          CIBW_TEST_REQUIRES: pytest numpy
          CIBW_TEST_COMMAND: pytest {package}/tests
          CIBW_TEST_SKIP: "*-macosx_arm64 *-macosx_universal2:arm64"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  upload_all:
    needs: [build_wheels, make_sdist]
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@release/v1